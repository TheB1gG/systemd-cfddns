#!/bin/bash

# Forked by benkulbertis/cloudflare-update-record.sh
# CHANGE THESE
api_token="hdfhdfghdfghdfghdfghfdhh" # Create a token with edit Zone DNS permission on https://dash.cloudflare.com/profile/api-tokens
zone_identifier="asdasdadasdasd"   # Can be found in the "Overview" tab of your domain


ip4_1=$(curl -s http://195.201.168.84/ip.php)  # Alternatively use https://api.ipify.org
ip4_2=$(curl -s http://195.201.168.111/ip.php)  # Alternatively use https://api.ipify.org
ip6_1=$(ip -6 addr|awk '{print $2}'|grep -P '^(?!fe80)[[:alnum:]]{4}:.*/128'|cut -d '/' -f1 | grep 2a01)
ip6_2=$(ip -6 addr|awk '{print $2}'|grep -P '^(?!fe80)[[:alnum:]]{4}:.*/128'|cut -d '/' -f1 | grep 2a02)

# SCRIPT START
echo "[Cloudflare DDNS] Check Initiated"

# Seek for the record
# Get records with
# IPv4 curl -s -X GET "https://api.cloudflare.com/client/v4/zones/replace_with_zoneid/dns_records?name=replace_with_FQDN&type=A" -H "Authorization: Bearer replace_with_api_token" -H "Content-Type: application/json" | jq
# IPv6 curl -s -X GET "https://api.cloudflare.com/client/v4/zones/replace_with_zoneid/dns_records?name=replace_with_FQDN&type=AAAA" -H "Authorization: Bearer replace_with_api_token" -H "Content-Type: application/json" | jq
# and replace the ids down below
record4_1=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records/replace_with_id1" -H "Authorization: Bearer $api_token" -H "Content-Type: application/json")
record4_2=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records/replace_with_id2" -H "Authorization: Bearer $api_token" -H "Content-Type: application/json")
record6_1=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records/replace_with_id3" -H "Authorization: Bearer $api_token" -H "Content-Type: application/json")
record6_2=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records/replace_with_id4" -H "Authorization: Bearer $api_token" -H "Content-Type: application/json")

# Can't do anything without 4 records record
if [[ $record4_1 == *"\"count\":0"* || $record4_2 == *"\"count\":0"* || $record6_1 == *"\"count\":0"* || $record6_2 == *"\"count\":0"* ]]; then
  >&2 echo -e "[Cloudflare DDNS] Dual stack records do not exist, perhaps create them first?"
  exit 1
fi

# Set existing IP address from the fetched record
old_ip4_1=$(echo "$record4_1" | grep -Po '(?<="content":")[^"]*' | head -1)
old_ip4_2=$(echo "$record4_2" | grep -Po '(?<="content":")[^"]*' | head -1)
old_ip6_1=$(echo "$record6_1" | grep -Po '(?<="content":")[^"]*' | head -1)
old_ip6_2=$(echo "$record6_2" | grep -Po '(?<="content":")[^"]*' | head -1)

# Compare either one is the same
# NOTE: The script will update even one IP remains the same.
if [[ $ip4_1 == $old_ip4_1 && $ip4_2 == $old_ip4_2 && $ip6_1 == $old_ip6_1 && $ip6_2 == $old_ip6_2 ]]; then
  echo "[Cloudflare DDNS] IPs have not changed."
  exit 0
fi

# The execution of update
# Get records with
# IPv4 curl -s -X GET "https://api.cloudflare.com/client/v4/zones/replace_with_zoneid/dns_records?name=replace_with_FQDN&type=A" -H "Authorization: Bearer replace_with_api_token" -H "Content-Type: application/json" | jq
# IPv6 curl -s -X GET "https://api.cloudflare.com/client/v4/zones/replace_with_zoneid/dns_records?name=replace_with_FQDN&type=AAAA" -H "Authorization: Bearer replace_with_api_token" -H "Content-Type: application/json" | jq
# and replace the ids down below
update4_1=$(curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records/replace_with_id1" -H "Authorization: Bearer $api_token" -H "Content-Type: application/json" --data "{\"id\":\"$zone_identifier\",\"type\":\"A\",\"proxied\":false,\"name\":\"$record_name\",\"content\":\"$ip4_1\",\"ttl\":1}")
update4_2=$(curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records/replace_with_id2" -H "Authorization: Bearer $api_token" -H "Content-Type: application/json" --data "{\"id\":\"$zone_identifier\",\"type\":\"A\",\"proxied\":false,\"name\":\"$record_name\",\"content\":\"$ip4_2\",\"ttl\":1}")
update6_1=$(curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records/replace_with_id3" -H "Authorization: Bearer $api_token" -H "Content-Type: application/json" --data "{\"id\":\"$zone_identifier\",\"type\":\"AAAA\",\"proxied\":false,\"name\":\"$record_name\",\"content\":\"$ip6_1\",\"ttl\":1}")
update6_2=$(curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records/replace_with_id4" -H "Authorization: Bearer $api_token" -H "Content-Type: application/json" --data "{\"id\":\"$zone_identifier\",\"type\":\"AAAA\",\"proxied\":false,\"name\":\"$record_name\",\"content\":\"$ip6_2\",\"ttl\":1}")

# The moment of truth
if [[ $update4_1 == *"\"success\":false"* || $update4_2 == *"\"success\":false"* || $update6_1 == *"\"success\":false"* || $update6_2 == *"\"success\":false"* ]]; then
  >&2 echo -e "[Cloudflare DDNS] Update failed. DUMPING RESULTS:\n$update4_1\n$update4_2\n$update6_1\n$update6_2"
  exit 1
else
  echo "[Cloudflare DDNS] IPv4 address 1 '$ip4_1' and IPv4 address 2 '$ip4_2' and IPv6 address 1 '$ip6_1' and IPv6 address 2 '$ip6_2' has been synced to Cloudflare."
fi